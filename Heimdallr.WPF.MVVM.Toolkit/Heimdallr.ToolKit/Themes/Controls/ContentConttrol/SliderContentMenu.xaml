<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:Heimdallr.ToolKit.UI.Controls"
                    xmlns:cnvts="clr-namespace:Heimdallr.ToolKit.Converters">

  <!-- SliderContentMenu의 스타일 정의 -->
  <Style TargetType="{x:Type ctrls:SliderContentMenu}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:SliderContentMenu}">
          <!-- 메뉴의 외관을 정의하는 Border -->
          <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
            <!-- 메뉴의 콘텐츠를 표시하는 ContentControl -->
            <ContentControl Content="{TemplateBinding Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

<!-- RadioButton 사용시 -->
  <Style TargetType="{x:Type ctrls:SlideContentMenuItemRadio}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:SlideContentMenuItemRadio}">
          <Border
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
            <ContentControl Content="{TemplateBinding Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ctrls:SlideContentMenuItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:SlideContentMenuItem}">
          <StackPanel>
            <!-- 헤더 라디오 버튼 -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
              <ToggleButton x:Name="ExpanderButton"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Width="16" Height="16"
                            Margin="0,0,4,0"
                            Visibility="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent},
                                          Converter={cnvts:BooleanToVisibilityConverter}}">
                <ToggleButton.Style>
                  <Style TargetType="ToggleButton">
                    <Setter Property="Content" Value="▼}"/>
                    <Style.Triggers>
                      <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Content" Value="▲"/>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </ToggleButton.Style>
              </ToggleButton>
              
              <!-- HeimdallrIcon 추가 -->
              <ctrls:HeimdallrIcon Width="16" Height="16"
                                   PathIcon="{TemplateBinding PathIcon}"
                                   Image="{TemplateBinding Image}"
                                   Icon="{TemplateBinding Icon}"
                                   Fill="{TemplateBinding Foreground}"
                                   Margin="0,0,6,0"/>


              <!-- 라이도 버튼 -->
              <RadioButton Content="{TemplateBinding Header}"
                           GroupName="MainMenuGroup"
                           Foreground="{TemplateBinding Foreground}"
                           IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
            </StackPanel>

            <!-- 하위 항목 표시 영역 -->
            <ItemsPresenter x:Name="ItemsHost"
                          Margin="16,4,0,0"
                          Visibility="Collapsed"/>
          </StackPanel>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>

  
  