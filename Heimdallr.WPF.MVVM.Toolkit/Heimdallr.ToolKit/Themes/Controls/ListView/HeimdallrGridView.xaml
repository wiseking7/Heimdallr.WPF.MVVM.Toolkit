<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                   xmlns:ctrls="clr-namespace:Heimdallr.ToolKit.UI.Controls"  
                   xmlns:modui="http://schemas.modernwpf.com/2019">  

 <Style TargetType="{x:Type ctrls:HeimdallrGridViewItem}">
    <!-- 기본 폰트 및 레이아웃 설정 -->
    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />  
   <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />  
   <Setter Property="Background" Value="{DynamicResource GridViewItemBackground}" />  
   <Setter Property="Foreground" Value="{DynamicResource GridViewItemForeground}" />  
   <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>  
   <Setter Property="HorizontalContentAlignment" Value="Center" />  
   <Setter Property="VerticalContentAlignment" Value="Center" />  
   <Setter Property="Margin" Value="0 0 4 4" />  
   <Setter Property="MinWidth" Value="{DynamicResource GridViewItemMinWidth}"/>  
   <Setter Property="MinHeight" Value="{DynamicResource GridViewItemMinHeight}" />

    <!-- 포커스 시각 스타일 설정 -->
    <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />  
   <Setter Property="FocusVisualMargin" Value="-2" />  
   <Setter Property="FocusVisualPrimaryBrush" Value="{DynamicResource GridViewItemFocusVisualPrimaryBrush}"/>  
   <Setter Property="FocusVisualPrimaryThickness" Value="2" />  
   <Setter Property="FocusVisualSecondaryBrush" Value="{DynamicResource GridViewItemFocusVisualSecondaryBrush}"/>  
   <Setter Property="FocusVisualSecondaryThickness" Value="1" />  
   <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

    <!-- ControlTemplate 정의 -->
    <Setter Property="Template">  
     <Setter.Value>  
       <ControlTemplate TargetType="{x:Type ctrls:HeimdallrGridViewItem}">
          <!-- 내부에서 사용할 체크 마크 도형 정의 (StreamGeometry) 확장가능-->
          <ControlTemplate.Resources>
            <StreamGeometry x:Key="CheckMark">M 17.939453 5.439453 L 7.5 15.888672 L 2.060547 10.439453 L 2.939453 9.560547 L 7.5 14.111328 L 17.060547 4.560547 Z</StreamGeometry>
          </ControlTemplate.Resources>

          <!-- 항목 배경 및 테두리를 위한 Border -->
          <Border
              x:Name="ContentBorder"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

            <!-- 사용자 지정 VisualStateManager 사용 -->
            <VisualStateManager.CustomVisualStateManager>
              <modui:SimpleVisualStateManager />
            </VisualStateManager.CustomVisualStateManager>

            <!-- VisualState 정의: 멀티 선택 상태 전환 -->
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="MultiSelectStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="MultiSelectEnabled" To="MultiSelectDisabled">
                    <Storyboard>
                      <!-- 멀티 셀렉트 체크박스를 감추는 애니메이션 -->
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
                                                     Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="{x:Static Visibility.Collapsed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <modui:FadeOutThemeAnimation TargetName="MultiSelectSquare" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>

                <!-- 멀티 선택 비활성 상태 -->
                <VisualState x:Name="MultiSelectDisabled" />

                <!-- 멀티 선택 활성 상태 -->
                <VisualState x:Name="MultiSelectEnabled">
                  <Storyboard>
                    <!-- 체크박스 보이기 -->
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <modui:FadeInThemeAnimation TargetName="MultiSelectSquare" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- 실제 항목 콘텐츠 및 시각 요소 구성 -->
            <Grid>
              <!-- 항목 콘텐츠 (Text 또는 기타) -->
              <ContentPresenter
                  x:Name="ContentPresenter"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  Margin="{TemplateBinding Padding}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <!-- 선택 테두리 강조 -->
              <Rectangle
                  x:Name="BorderRectangle"
                  IsHitTestVisible="False"
                  Stroke="{DynamicResource SystemControlHighlightListAccentLowBrush}"
                  StrokeThickness="2"
                  Opacity="0" />
              <!-- 멀티 선택 체크 표시 박스 -->
              <Border
                  x:Name="MultiSelectSquare"
                  Background="{DynamicResource GridViewItemCheckBoxBrush}"
                  Width="20"
                  Height="20"
                  Margin="0,2,2,0"
                  VerticalAlignment="Top"
                  HorizontalAlignment="Right"
                  Visibility="Collapsed">
                <!-- 체크 아이콘 -->
                <!-- 위에서 정의한 StreamGeometry 사용(CheckMark) -->
                <modui:FontIconFallback
                  x:Name="MultiSelectCheck"
                  FontFamily="{DynamicResource SymbolThemeFontFamily}"
                  Data="{StaticResource CheckMark}"
                  FontSize="16"
                  Foreground="{DynamicResource GridViewItemCheckBrush}"
                  Opacity="0" />
              </Border>
            </Grid>
          </Border>

          <!-- 트리거 정의 -->
          <ControlTemplate.Triggers>
            
            <!-- 포커스 시 -->
            <Trigger Property="modui:FocusVisualHelper.ShowFocusVisual" Value="True">
              <Setter TargetName="BorderRectangle" Property="Visibility" Value="Collapsed" />
            </Trigger>
            
            <!-- 마우스 오버 상태 & 선택되지 않은 상태 -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="BorderRectangle" Property="Opacity" Value="1" />
              <Setter TargetName="BorderRectangle" Property="Stroke" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource GridViewItemForegroundPointerOver}" />
              <Setter Property="FocusVisualSecondaryBrush" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
              <Setter Property="FocusVisualSecondaryThickness" Value="2" />
            </MultiTrigger>
            
            <!-- 선택 상태 & 마우스 오버 아님 -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
              <Setter TargetName="BorderRectangle" Property="Opacity" Value="1" />
              <Setter TargetName="BorderRectangle" Property="Stroke" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource GridViewItemForegroundSelected}" />
              <Setter Property="FocusVisualSecondaryBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
              <Setter Property="FocusVisualSecondaryThickness" Value="2" />
              <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
            </MultiTrigger>
            
            <!-- 선택 상태 & 마우스 오버 상태 -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
              <Setter TargetName="BorderRectangle" Property="Opacity" Value="1" />
              <Setter TargetName="BorderRectangle" Property="Stroke" Value="{DynamicResource SystemControlHighlightListAccentMediumBrush}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource GridViewItemForegroundSelected}" />
              <Setter Property="FocusVisualSecondaryBrush" Value="{DynamicResource SystemControlHighlightListAccentMediumBrush}" />
              <Setter Property="FocusVisualSecondaryThickness" Value="2" />
              <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
            </MultiTrigger>
            
            <!-- 컨트롤 비활성화 시 -->
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ContentBorder" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>  
     </Setter.Value>  
   </Setter>  
  </Style>

  <!-- GridView의 헤더 항목(ctrls:HeimdallrGridViewHeaderItem)에 대한 스타일 정의 -->
  <Style TargetType="{x:Type ctrls:HeimdallrGridViewHeaderItem}">
    <!-- 글꼴 설정 -->
    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource GridViewHeaderItemThemeFontSize}" />

    <!-- 배경색 설정 -->
    <Setter Property="Background" Value="{DynamicResource GridViewHeaderItemBackground}" />

    <!-- 외부 여백(Margin): 하단에 4px -->
    <Setter Property="Margin" Value="0,0,0,4" />

    <!-- 내부 여백(Padding): 좌우 12px, 상단 8px -->
    <Setter Property="Padding" Value="12,8,12,0" />

    <!-- 내용 정렬 방식 -->
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />

    <!-- 최소 높이 설정 -->
    <Setter Property="MinHeight" Value="{DynamicResource GridViewHeaderItemMinHeight}" />

    <!-- 시스템 포커스 비주얼 사용 여부 (접근성 관련) -->
    <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

    <!-- 컨트롤 템플릿 정의 시작 -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:HeimdallrGridViewHeaderItem}">
          <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

            <!-- 내부 콘텐츠 레이아웃: StackPanel (세로 정렬) -->
            <StackPanel>

              <!-- 컨텐츠 표시 영역 -->
              <ContentPresenter
                  x:Name="ContentPresenter"
                  Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

              <!-- 헤더 하단 구분선 (Divider 역할) -->
              <Rectangle
                  Stroke="{DynamicResource GridViewHeaderItemDividerStroke}"
                  StrokeThickness="0.5"
                  Height="1"
                  VerticalAlignment="Bottom"
                  HorizontalAlignment="Stretch"
                  Margin="12,8,12,0" />
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ctrls:HeimdallrGridView}">
    <Setter Property="Padding" Value="0,0,0,10" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    <!--<Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="-2" />-->
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <WrapPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:HeimdallrGridView}">
          <Border
              BorderBrush="{TemplateBinding BorderBrush}"
              Background="{TemplateBinding Background}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              SnapsToDevicePixels="True">
            <modui:ScrollViewerEx
                x:Name="ScrollViewer"
                KeyboardNavigation.TabNavigation="{TemplateBinding KeyboardNavigation.TabNavigation}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                Focusable="false">
              <ItemsPresenter
                  Margin="{TemplateBinding Padding}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </modui:ScrollViewerEx>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsGrouping" Value="true" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>