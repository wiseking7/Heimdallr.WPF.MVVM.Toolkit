<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:Heimdallr.ToolKit.UI.Controls"
                    xmlns:modui="http://schemas.modernwpf.com/2019">

  <Style TargetType="{x:Type ctrls:HeimdallrListViewItem}">
    <!-- 기본 속성 (글꼴관련 -->
    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
    
    <!-- 기본 속성 (기본 외곽선 및 배경 제거)-->
    <Setter Property="BorderBrush" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
   
    <!-- 기본 속성 (좌우 간격)-->
    <Setter Property="Padding" Value="12,0,12,0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />

    <!-- 기본 속성 (아이템의 최소크기 설정)-->
    <Setter Property="MinWidth" Value="{DynamicResource ListViewItemMinWidth}" />
    <Setter Property="MinHeight" Value="{DynamicResource ListViewItemMinHeight}" />

    <!-- 기본 속성 (시스템 포커스 스타일 사용 여부)-->
    <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

    <Setter Property="Template">
      <Setter.Value>
        <!-- ControlTemplate: 아이템 외형 정의-->
        <ControlTemplate TargetType="{x:Type ctrls:HeimdallrListViewItem}">
          <ControlTemplate.Resources>
            <StreamGeometry x:Key="CheckMark">M 17.939453 5.439453 L 7.5 15.888672 L 2.060547 10.439453 L 2.939453 9.560547 L 7.5 14.111328 L 17.060547 4.560547 Z</StreamGeometry>
          </ControlTemplate.Resources>
          
          <!-- 전체 외형-->
          <Border
              x:Name="ContentBorder"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              SnapsToDevicePixels="True">
            
            <VisualStateManager.CustomVisualStateManager>
              <modui:SimpleVisualStateManager />
            </VisualStateManager.CustomVisualStateManager>
            <VisualStateManager.VisualStateGroups>
              
              <!-- VisualStateGroup: 멀티 선택 모드 -->
              <VisualStateGroup x:Name="MultiSelectStates">
                <VisualStateGroup.Transitions>
                  <!-- MultiSelectEnabled / MultiSelectDisabled 두 가지 상태 전환을 정의-->
                  <!-- 각 상태에서는 CheckBox 형태의 선택 UI (MultiSelectSquare)가 애니메이션으로 나타남/사라짐 -->
                  <!-- 슬라이딩 효과는 TranslateTransform을 활용함 (X=±32) -->
                  <VisualTransition From="MultiSelectDisabled" To="MultiSelectEnabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                        <DiscreteThicknessKeyFrame KeyTime="0" Value="32,0,0,0" />
                      </ThicknessAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="MultiSelectEnabled" To="MultiSelectDisabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="{x:Static Visibility.Collapsed}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="MultiSelectDisabled">
                  <Storyboard>
                    <DoubleAnimation
                        Storyboard.TargetName="MultiSelectCheckBoxTransform"
                        Storyboard.TargetProperty="X"
                        From="0"
                        To="-32"
                        Duration="0" />
                    <DoubleAnimation
                        Storyboard.TargetName="MultiSelectClipTransform"
                        Storyboard.TargetProperty="X"
                        From="0"
                        To="32"
                        Duration="0" />
                    <DoubleAnimation
                        Storyboard.TargetName="ContentPresenterTranslateTransform"
                        Storyboard.TargetProperty="X"
                        From="32"
                        To="0"
                        Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MultiSelectEnabled">
                  <Storyboard>
                    <DoubleAnimation
                        Storyboard.TargetName="MultiSelectCheckBoxTransform"
                        Storyboard.TargetProperty="X"
                        From="-32"
                        To="0"
                        Duration="0" />
                    <DoubleAnimation
                        Storyboard.TargetName="MultiSelectClipTransform"
                        Storyboard.TargetProperty="X"
                        From="32"
                        To="0"
                        Duration="0" />
                    <DoubleAnimation
                        Storyboard.TargetName="ContentPresenterTranslateTransform"
                        Storyboard.TargetProperty="X"
                        From="-32"
                        To="0"
                        Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                      <DiscreteThicknessKeyFrame KeyTime="0" Value="32,0,0,0" />
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Rectangle
                  x:Name="BorderBackground"
                  IsHitTestVisible="False"
                  Fill="{DynamicResource ListViewItemBorderBackground}"
                  Opacity="0" />
              <Grid
                  x:Name="ContentPresenterGrid"
                  Background="Transparent"
                  Margin="0,0,0,0">
                <Grid.RenderTransform>
                  <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                </Grid.RenderTransform>
                <ContentPresenter
                    x:Name="ContentPresenter"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
              
              <!-- 멀티 선택 모드를 위한 사각형 체크박스 Collapsed 상태였다가 멀티 선택 모드일 때 Visible로 전환됨 -->
              <!-- 내부에 체크 마크(modui:FontIconFallback, CheckMark Path) 포함 -->
              <Border
                  x:Name="MultiSelectSquare"
                  BorderBrush="{DynamicResource SystemControlForegroundBaseMediumHighBrush}"
                  BorderThickness="2"
                  Width="20"
                  Height="20"
                  Margin="12,0,0,0"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Left"
                  Visibility="Collapsed">
                <Border.Clip>
                  <RectangleGeometry Rect="0,0,20,20">
                    <RectangleGeometry.Transform>
                      <TranslateTransform x:Name="MultiSelectClipTransform" />
                    </RectangleGeometry.Transform>
                  </RectangleGeometry>
                </Border.Clip>
                <Border.RenderTransform>
                  <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
                </Border.RenderTransform>
                <modui:FontIconFallback
                    x:Name="MultiSelectCheck"
                    FontFamily="{DynamicResource SymbolThemeFontFamily}"
                    Data="{StaticResource CheckMark}"
                    FontSize="16"
                    Foreground="{DynamicResource ListViewItemCheckBrush}"
                    Visibility="Collapsed"
                    Opacity="0" />
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="BorderBackground" Property="Opacity" Value="1" />
              <Setter TargetName="BorderBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
              <Setter TargetName="BorderBackground" Property="Opacity" Value="1" />
              <Setter TargetName="BorderBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
              <Setter TargetName="BorderBackground" Property="Opacity" Value="1" />
              <Setter TargetName="BorderBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumBrush}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ContentBorder" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ctrls:HeimdallrListView}">
    <!-- 리스트 뷰 아래쪽에만 10픽셀의 패딩을 주어 하단 마진 효과 -->
    <Setter Property="Padding" Value="0,0,0,10" />

    <!-- 포커스를 받을 수 없도록 설정 (기본 탭 탐색 제외) -->
    <Setter Property="IsTabStop" Value="False" />

    <!-- Tab 키로 하위 항목 중 하나만 포커싱 (한 번만 이동) -->
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />

    <!-- 수평 스크롤바를 아예 비활성화 (항상 표시되지 않음) -->
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />

    <!-- 수직 스크롤바는 내용이 넘칠 때만 표시 -->
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

    <!-- 지연 스크롤 비활성화 (마우스로 스크롤 막대를 드래그할 때 실시간 반영) -->
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />

    <!-- 내용이 실제로 가상화되도록 ScrollViewer 설정 -->
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />

    <!-- 펜이나 터치 제스처(플릭)를 비활성화 (정밀한 제어 목적) -->
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    
    <!--<Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />-->

    <!-- 시스템 포커스 시각 효과를 기본 스타일로 설정 -->
    <!--<Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />-->
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

    <!-- 리스트의 ItemsPanel은 기본적으로 수직 VirtualizingStackPanel 사용 -->
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>

    <!-- 커스텀 컨트롤의 시각 트리 구성 (ControlTemplate 정의) -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:HeimdallrListView}">
          <Border
              BorderBrush="{TemplateBinding BorderBrush}"
              Background="{TemplateBinding Background}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              SnapsToDevicePixels="True">

            <!-- modui:ScrollViewerEx는 확장된 ScrollViewer, 예: 스크롤 동작 개선 -->
            <modui:ScrollViewerEx
                x:Name="ScrollViewer"
                KeyboardNavigation.TabNavigation="{TemplateBinding KeyboardNavigation.TabNavigation}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                Focusable="false">

              <!-- 항목들을 표시할 ItemsPresenter (내부 콘텐츠 렌더링용) -->
              <ItemsPresenter
                  Margin="{TemplateBinding Padding}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </modui:ScrollViewerEx>
          </Border>

          <!-- 트리거: 그룹화 되어 있으나 가상화가 꺼져 있는 경우 -->
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <!-- ListView가 그룹화를 사용 중 -->
                <Condition Property="IsGrouping" Value="true" />

                <!-- 그러나 그룹화 상태에서 가상화는 사용하지 않음 -->
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
              </MultiTrigger.Conditions>

              <!-- 이 경우 콘텐츠 스크롤을 비활성화 (픽셀 기반 스크롤 허용) -->
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>