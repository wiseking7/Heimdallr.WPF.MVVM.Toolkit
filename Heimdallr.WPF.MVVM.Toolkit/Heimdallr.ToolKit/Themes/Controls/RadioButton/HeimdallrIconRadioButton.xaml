<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:Heimdallr.ToolKit.UI.Controls">

  <Style TargetType="{x:Type ctrls:HeimdallrIconRadioButton}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrls:HeimdallrIconRadioButton}">
          <Border 
            x:Name="border"
            Padding="6"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True"
            HorizontalAlignment="Center">

            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
              
              <!-- HeimdallrIcon-->
              <ctrls:HeimdallrIcon
                x:Name="icon"
                PathIcon="{TemplateBinding PathIcon}"
                Fill="{TemplateBinding IconFill}"
                VerticalAlignment="Center"
                Margin="0 0 6 0" />

              <ContentPresenter
                x:Name="contentPresenter"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                TextElement.Foreground="{TemplateBinding Foreground}"/>
            </StackPanel>
          </Border>

          <ControlTemplate.Triggers>
            <!-- 선택 시 -->
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="icon" Property="Fill" >
                <Setter.Value>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CheckedForeground" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                <Setter.Value>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CheckedForeground" />
                </Setter.Value>
              </Setter>
            </Trigger>

            <!-- 마우스 오버 -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="icon" Property="Fill">
                <Setter.Value>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MouseOverForeground" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                <Setter.Value>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MouseOverForeground" />
                </Setter.Value>
              </Setter>
            </Trigger>

            <!-- Content 없을 때 ContentPresenter 숨기기 -->
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="icon" Property="Margin" Value="0"/>
            </Trigger>

            <Trigger Property="Content" Value="">
              <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="icon" Property="Margin" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>